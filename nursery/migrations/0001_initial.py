# Generated by Django 5.2.5 on 2025-08-13 11:14

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PlantMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('material_type', models.CharField(choices=[('SEED', 'Seed'), ('CUTTING', 'Cutting'), ('SCION', 'Scion'), ('LAYER', 'Layer'), ('DIVISION', 'Division'), ('TISSUE', 'Tissue Culture'), ('OTHER', 'Other')], max_length=16)),
                ('lot_code', models.CharField(blank=True, help_text='Optional supplier/batch code for traceability.', max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PropagationBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('method', models.CharField(choices=[('SEED_SOWING', 'Seed sowing'), ('CUTTING_ROOTING', 'Cutting rooting'), ('GRAFTING', 'Grafting'), ('AIR_LAYER', 'Air layering'), ('DIVISION', 'Division'), ('TISSUE_CULTURE', 'Tissue culture'), ('OTHER', 'Other')], max_length=24)),
                ('status', models.CharField(choices=[('STARTED', 'Started'), ('GERMINATING', 'Germinating/Rooting'), ('POTTED', 'Potted up'), ('GROWING', 'Growing'), ('DORMANT', 'Dormant'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('DISCARDED', 'Discarded')], default='STARTED', max_length=16)),
                ('started_on', models.DateField(default=django.utils.timezone.now)),
                ('quantity_started', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('notes', models.TextField(blank=True)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='nursery.plantmaterial')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_on', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('DORMANT', 'Dormant'), ('SOLD', 'Sold'), ('DEAD', 'Dead'), ('DISCARDED', 'Discarded')], default='ACTIVE', max_length=12)),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('acquired_on', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plants', to='nursery.propagationbatch')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_type', models.CharField(choices=[('NOTE', 'Note'), ('SOW', 'Sow / Start'), ('GERMINATE', 'Germination'), ('POT_UP', 'Pot up / Transplant'), ('PRUNE', 'Prune'), ('MOVE', 'Move / Location change'), ('WATER', 'Water'), ('FERTILIZE', 'Fertilize'), ('SELL', 'Sold'), ('DISCARD', 'Discard')], default='NOTE', max_length=16)),
                ('happened_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('quantity_delta', models.IntegerField(blank=True, help_text='Optional: record changes (+/-) to counts (e.g., +5 germinated, -2 losses).', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('plant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='nursery.plant')),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='nursery.propagationbatch')),
            ],
            options={
                'ordering': ['-happened_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Taxon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scientific_name', models.CharField(max_length=200)),
                ('cultivar', models.CharField(blank=True, max_length=100)),
                ('clone_code', models.CharField(blank=True, max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['scientific_name', 'cultivar', 'clone_code'],
            },
        ),
        migrations.AddField(
            model_name='plantmaterial',
            name='taxon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='nursery.taxon'),
        ),
        migrations.AddField(
            model_name='plant',
            name='taxon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plants', to='nursery.taxon'),
        ),
        migrations.AddIndex(
            model_name='propagationbatch',
            index=models.Index(fields=['user', 'status'], name='nursery_pro_user_id_e79451_idx'),
        ),
        migrations.AddIndex(
            model_name='propagationbatch',
            index=models.Index(fields=['user', 'material'], name='nursery_pro_user_id_d775ff_idx'),
        ),
        migrations.AddIndex(
            model_name='propagationbatch',
            index=models.Index(fields=['user', 'started_on'], name='nursery_pro_user_id_d9503a_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['user', 'happened_at'], name='nursery_eve_user_id_734cf2_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['user', 'event_type'], name='nursery_eve_user_id_572048_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['user', 'batch'], name='nursery_eve_user_id_77de83_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['user', 'plant'], name='nursery_eve_user_id_b6c89b_idx'),
        ),
        migrations.AddConstraint(
            model_name='event',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('batch__isnull', False), ('plant__isnull', True)), models.Q(('batch__isnull', True), ('plant__isnull', False)), _connector='OR'), name='event_xor_batch_or_plant'),
        ),
        migrations.AddIndex(
            model_name='taxon',
            index=models.Index(fields=['user', 'scientific_name'], name='nursery_tax_user_id_828283_idx'),
        ),
        migrations.AddConstraint(
            model_name='taxon',
            constraint=models.UniqueConstraint(fields=('user', 'scientific_name', 'cultivar', 'clone_code'), name='uniq_taxon_per_user_sc_cultivar_clone'),
        ),
        migrations.AddIndex(
            model_name='plantmaterial',
            index=models.Index(fields=['user', 'taxon'], name='nursery_pla_user_id_346682_idx'),
        ),
        migrations.AddIndex(
            model_name='plantmaterial',
            index=models.Index(fields=['user', 'material_type'], name='nursery_pla_user_id_b2cc57_idx'),
        ),
        migrations.AddConstraint(
            model_name='plantmaterial',
            constraint=models.UniqueConstraint(condition=models.Q(('lot_code', ''), _negated=True), fields=('user', 'taxon', 'material_type', 'lot_code'), name='uniq_material_per_user_taxon_type_lot'),
        ),
        migrations.AddIndex(
            model_name='plant',
            index=models.Index(fields=['user', 'taxon'], name='nursery_pla_user_id_9e4be1_idx'),
        ),
        migrations.AddIndex(
            model_name='plant',
            index=models.Index(fields=['user', 'status'], name='nursery_pla_user_id_73485c_idx'),
        ),
    ]
